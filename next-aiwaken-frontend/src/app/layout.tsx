import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { QueryClientContextProvider } from "@/context/query-client-context";
import { AuthenticationProvider } from "@/context/auth-context";
import { getServerAuthSession } from "@/services/ssr/auth";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const data = await getServerAuthSession();
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <QueryClientContextProvider>
          <AuthenticationProvider initialUser={data}>
            {children}
        </AuthenticationProvider>
        </QueryClientContextProvider>
      </body>
    </html>
  );
}
